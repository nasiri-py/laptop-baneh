# Generated by Django 4.1.2 on 2022-11-30 17:24

import ckeditor.fields
import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleHit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cover', models.ImageField(upload_to='brands')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='CPUSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='GPUMaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maker', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, unique=True)),
                ('grade', models.CharField(choices=[('n', 'New'), ('o', 'Openbox'), ('s', 'Stoke')], max_length=1)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('cover', models.ImageField(upload_to='products/cover/%Y/%m/%d')),
                ('available', models.BooleanField(default=True)),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.PositiveIntegerField()),
                ('discount', models.PositiveIntegerField(blank=True, null=True)),
                ('discount_percent', models.PositiveIntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('sell', models.IntegerField(default=0)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.brand')),
                ('category', models.ManyToManyField(related_name='products', to='products.category')),
                ('color', models.ManyToManyField(to='products.color')),
                ('hits', models.ManyToManyField(blank=True, related_name='hits', through='products.ArticleHit', to='products.ipaddress')),
            ],
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('weight', models.DecimalField(decimal_places=1, max_digits=2)),
                ('size', models.CharField(max_length=255)),
                ('screen_size', models.DecimalField(decimal_places=1, max_digits=3)),
                ('screen_type', models.CharField(max_length=255)),
                ('screen_resolution', models.CharField(max_length=255)),
                ('screen_matte', models.BooleanField(default=False)),
                ('screen_touch', models.BooleanField(default=False)),
                ('screen_description', models.TextField(blank=True, null=True)),
                ('cpu_maker', models.CharField(max_length=255)),
                ('cpu_model', models.CharField(max_length=255)),
                ('cpu_description', models.TextField(blank=True, null=True)),
                ('has_gpu', models.BooleanField(default=False)),
                ('gpu_model', models.CharField(max_length=255)),
                ('gpu_memory', models.PositiveIntegerField(blank=True, null=True)),
                ('gpu_description', models.TextField(blank=True, null=True)),
                ('ram_capacity', models.PositiveIntegerField()),
                ('ram_type', models.CharField(max_length=255)),
                ('ram_description', models.TextField(blank=True, null=True)),
                ('has_hdd', models.BooleanField(default=False)),
                ('hdd_capacity', models.CharField(blank=True, max_length=255, null=True)),
                ('has_ssd', models.BooleanField(default=False)),
                ('ssd_capacity', models.CharField(blank=True, max_length=255, null=True)),
                ('hard_description', models.TextField(blank=True, null=True)),
                ('optical_drive', models.BooleanField(default=False)),
                ('webcam', models.CharField(max_length=255)),
                ('touchpad_specs', models.CharField(max_length=255)),
                ('keyboard_backlight', models.CharField(max_length=255)),
                ('fingerprint', models.BooleanField(default=False)),
                ('sd_card', models.BooleanField(default=False)),
                ('wifi', models.BooleanField(default=False)),
                ('bluetooth', models.CharField(max_length=255)),
                ('ethernet', models.BooleanField(default=False)),
                ('vga', models.BooleanField(default=False)),
                ('hdmi', models.BooleanField(default=False)),
                ('usb2_num', models.PositiveIntegerField(blank=True, null=True)),
                ('usb3_num', models.PositiveIntegerField(blank=True, null=True)),
                ('type_c', models.PositiveIntegerField(blank=True, null=True)),
                ('thunderbolt', models.BooleanField(default=False)),
                ('jack_3', models.BooleanField(default=False)),
                ('os', models.CharField(max_length=255)),
                ('include_items', models.CharField(max_length=255)),
                ('battery', models.CharField(max_length=255)),
                ('cpu_series', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cpu_series', to='products.cpuseries')),
                ('gpu_maker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gpu_makers', to='products.gpumaker')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='specs', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/%Y/%m/%d')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Your Comment')),
                ('is_reply', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='products.product')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='products.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='articlehit',
            name='ip_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.ipaddress'),
        ),
        migrations.AddField(
            model_name='articlehit',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
    ]
